/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v3/CountryInfo/{countryCode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get country info for the given country */
        get: operations["CountryCountryInfo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/AvailableCountries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all available countries */
        get: operations["CountryAvailableCountries"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/LongWeekend/{year}/{countryCode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get long weekends for a given country */
        get: operations["LongWeekendLongWeekend"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/PublicHolidays/{year}/{countryCode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get public holidays */
        get: operations["PublicHolidayPublicHolidaysV3"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/IsTodayPublicHoliday/{countryCode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check if today is a public holiday, with optional UTC offset adjustment
         * @description The calculation is made on the basis of UTC time to adjust the time please use the offset.
         *
         *     This is a special endpoint for `curl`
         *
         *
         *     200 = Today is a public holiday
         *
         *     204 = Today is not a public holiday
         *
         *
         *     `STATUSCODE=$(curl --silent --output /dev/stderr --write-out "%{http_code}" https://date.nager.at/Api/v3/IsTodayPublicHoliday/AT)`
         *
         *
         *     `if [ $STATUSCODE -ne 200 ]; then # error handling; fi`
         */
        get: operations["PublicHolidayIsTodayPublicHoliday"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/NextPublicHolidays/{countryCode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns the upcoming public holidays for the next 365 days for the given country */
        get: operations["PublicHolidayNextPublicHolidays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/NextPublicHolidaysWorldwide": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns the upcoming public holidays for the next 7 days */
        get: operations["PublicHolidayNextPublicHolidaysWorldwide"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v3/Version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve the current version of the Nager.Date library in use. */
        get: operations["VersionGetVersion"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description CountryInfo Dto */
        CountryInfoDto: {
            /** @description CommonName */
            commonName: string | null;
            /** @description OfficialName */
            officialName: string | null;
            /** @description CountryCode */
            countryCode: string | null;
            /** @description Region */
            region: string | null;
            /** @description Country Borders */
            borders?: components["schemas"]["CountryInfoDto"][] | null;
        };
        /** @description Country */
        CountryV3Dto: {
            /** @description Country Code */
            countryCode: string | null;
            /** @description Country Name */
            name: string | null;
        };
        /** @enum {string} */
        HolidayTypes: "Public" | "Bank" | "School" | "Authorities" | "Optional" | "Observance";
        /** @description Long Weekend */
        LongWeekendV3Dto: {
            /**
             * Format: date
             * @description Start Date
             */
            startDate?: string;
            /**
             * Format: date
             * @description End Date
             */
            endDate?: string;
            /**
             * Format: int32
             * @description Day Count
             */
            dayCount?: number;
            /** @description Need Bridge Day */
            needBridgeDay?: boolean;
            /** @description Test */
            bridgeDays?: string[] | null;
        };
        /** @description Public Holiday */
        PublicHolidayV3Dto: {
            /**
             * Format: date
             * @description The date
             */
            date?: string;
            /** @description Local name */
            localName: string | null;
            /** @description English name */
            name: string | null;
            /** @description ISO 3166-1 alpha-2 */
            countryCode: string | null;
            /**
             * @deprecated
             * @description Is this public holiday every year on the same date
             */
            fixed?: boolean;
            /** @description Is this public holiday in every county (federal state) */
            global?: boolean;
            /** @description ISO-3166-2 - Federal states */
            counties?: string[] | null;
            /**
             * Format: int32
             * @description The launch year of the public holiday
             */
            launchYear?: number | null;
            /** @description A list of types the public holiday it is valid */
            types: components["schemas"]["HolidayTypes"][] | null;
        };
        /** @description Version Info Dto */
        VersionInfoDto: {
            /** @description Name */
            name: string | null;
            /** @description Version */
            version: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    CountryCountryInfo: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The Country Code `ISO 3166-1 alpha-2` */
                countryCode: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": components["schemas"]["CountryInfoDto"];
                    "application/json": components["schemas"]["CountryInfoDto"];
                    "text/json": components["schemas"]["CountryInfoDto"];
                };
            };
        };
    };
    CountryAvailableCountries: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": components["schemas"]["CountryV3Dto"][];
                    "application/json": components["schemas"]["CountryV3Dto"][];
                    "text/json": components["schemas"]["CountryV3Dto"][];
                };
            };
        };
    };
    LongWeekendLongWeekend: {
        parameters: {
            query?: {
                availableBridgeDays?: number;
                subdivisonCode?: string;
            };
            header?: never;
            path: {
                year: number;
                /** @description The Country Code `ISO 3166-1 alpha-2` */
                countryCode: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": components["schemas"]["LongWeekendV3Dto"][];
                    "application/json": components["schemas"]["LongWeekendV3Dto"][];
                    "text/json": components["schemas"]["LongWeekendV3Dto"][];
                };
            };
        };
    };
    PublicHolidayPublicHolidaysV3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                year: number;
                /** @description The Country Code `ISO 3166-1 alpha-2` */
                countryCode: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Public holidays */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": components["schemas"]["PublicHolidayV3Dto"][];
                    "application/json": components["schemas"]["PublicHolidayV3Dto"][];
                    "text/json": components["schemas"]["PublicHolidayV3Dto"][];
                };
            };
            /** @description Validation failure */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description CountryCode is unknown */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PublicHolidayIsTodayPublicHoliday: {
        parameters: {
            query?: {
                /** @description The Subdivison Code */
                countyCode?: string;
                /** @description utc timezone offset */
                offset?: number;
            };
            header?: never;
            path: {
                /** @description The Country Code `ISO 3166-1 alpha-2` */
                countryCode: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Today is a public holiday */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Today is not a public holiday */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation failure */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description CountryCode is unknown */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PublicHolidayNextPublicHolidays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The Country Code `ISO 3166-1 alpha-2` */
                countryCode: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": components["schemas"]["PublicHolidayV3Dto"][];
                    "application/json": components["schemas"]["PublicHolidayV3Dto"][];
                    "text/json": components["schemas"]["PublicHolidayV3Dto"][];
                };
            };
        };
    };
    PublicHolidayNextPublicHolidaysWorldwide: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": components["schemas"]["PublicHolidayV3Dto"][];
                    "application/json": components["schemas"]["PublicHolidayV3Dto"][];
                    "text/json": components["schemas"]["PublicHolidayV3Dto"][];
                };
            };
        };
    };
    VersionGetVersion: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": components["schemas"]["VersionInfoDto"];
                    "application/json": components["schemas"]["VersionInfoDto"];
                    "text/json": components["schemas"]["VersionInfoDto"];
                };
            };
        };
    };
}
